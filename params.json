{"name":"puppet-graphite","tagline":"puppet module for graphite monitoring tools","body":"#graphite\r\n\r\n####Table of Contents\r\n\r\n1. [Overview - What is the graphite module?](#overview)\r\n2. [Module Description - What does this module do?](#module-description)\r\n3. [Setup - The basics of getting started with graphite](#setup)\r\n    * [Beginning with graphite - Installation](#beginning-with-graphite)\r\n    * [Configure MySQL and Memcached](#configure-mysql-and-memcached)\r\n    * [Configuration with Apache 2.4 and CORS](#configuration-with-apache-24-and-cors)\r\n4. [Usage - The class and available configurations](#usage)\r\n7. [Requirements](#requirements)\r\n5. [Limitations - OS compatibility, etc.](#limitations)\r\n6. [Contributing to the graphite module](#contributing)\r\n\r\n##Overview\r\n\r\nThis module installs and makes basic configs for graphite, with carbon and whisper.\r\n\r\n##Module Description\r\n\r\n[Graphite](http://graphite.readthedocs.org/en/latest/overview.html), and its components Carbon and Whispter, is an enterprise-scale monitoring tool. This module sets up a simple graphite server with all its components. Furthermore it can be used to set up more complex graphite environments with metric aggregation, clustering and so on.\r\n\r\n##Setup\r\n\r\n**What graphite affects:**\r\n\r\n* packages/services/configuration files for Graphite\r\n* on default sets up webserver (can be disabled if manage by other module)\r\n\r\n###Beginning with Graphite\r\n\r\nTo install Graphite with default parameters\r\n\r\n```puppet\r\n    class { 'graphite': }\r\n```\r\n\r\nThe defaults are determined by your operating system e.g. Debian systems have one set of defaults, and RedHat systems have another). This defaults should work well on testing environments with graphite as a standalone service on the machine. For production use it is recommend to use a database like MySQL and cache data in memcached (not installed with this module) and configure it here. Furthermore you should check things like `gr_storage_schemas`.\r\n\r\n###Configure MySQL and Memcached\r\n\r\n```puppet\r\n  class { 'graphite':\r\n    gr_max_updates_per_second => 100,\r\n    gr_timezone               => 'Europe/Berlin',\r\n    secret_key                => 'CHANGE_IT!',\r\n    gr_storage_schemas        => [\r\n      {\r\n        name       => 'carbon',\r\n        pattern    => '^carbon\\.',\r\n        retentions => '1m:90d'\r\n      },\r\n      {\r\n        name       => 'special_server',\r\n        pattern    => '^longtermserver_',\r\n        retentions => '10s:7d,1m:365d,10m:5y'\r\n      },\r\n      {\r\n        name       => 'default',\r\n        pattern    => '.*',\r\n        retentions => '60:43200,900:350400'\r\n      }\r\n    ],\r\n    gr_django_db_engine       => 'django.db.backends.mysql',\r\n    gr_django_db_name         => 'graphite',\r\n    gr_django_db_user         => 'graphite',\r\n    gr_django_db_password     => 'MYsEcReT!',\r\n    gr_django_db_host         => 'mysql.my.domain',\r\n    gr_django_db_port         => '3306',\r\n    gr_memcache_hosts         => ['127.0.0.1:11211']\r\n  }\r\n```\r\n\r\n###Configuration with Apache 2.4 and CORS\r\n\r\nIf you use a system which ships Apache 2.4, then you will need a slightly different vhost config.\r\nHere is an example with Apache 2.4 and [CORS](http://en.wikipedia.org/wiki/Cross-origin_resource_sharing) enabled.\r\nIf you do not know what CORS, then do not use it. Its disabled by default.\r\n\r\n```puppet\r\n  class { 'graphite':\r\n    gr_apache_24               => true,\r\n    gr_web_cors_allow_from_all => true,\r\n    secret_key                 => 'CHANGE_IT!'\r\n  }\r\n```\r\n\r\n##Usage\r\n\r\n####Class: `graphite`\r\n\r\nThis is the primary class. And the only one which should be used.\r\n\r\n**Parameters within `graphite`:**\r\n\r\n#####`gr_user`\r\n\r\nDefault is empty. The user who runs graphite. If this is empty carbon runs as the user that invokes it.\r\n\r\n#####`gr_max_cache_size`\r\n\r\nDefault is 'inf'. Limits the size of the cache to avoid swapping or becoming CPU bound. Use the value \"inf\" (infinity) for an unlimited cache size.\r\n\r\n#####`gr_max_updates_per_second`\r\n\r\nDefault is 500. Limits the number of whisper update_many() calls per second, which effectively means the number of write requests sent to the disk.\r\n\r\n#####`gr_max_creates_per_minute`\r\n\r\nDefault is 50. Softly limits the number of whisper files that get created each minute.\r\n\r\n#####`gr_carbon_metric_interval`\r\n\r\nDefault is 60. Set the interval between sending internal performance metrics; affects all carbon daemons.\r\n\r\n#####`gr_line_receiver_interface`\r\n\r\nDefault is '0.0.0.0' (string). Interface the line receiver listens.\r\n\r\n#####`gr_line_receiver_port`\r\n\r\nDefault is 2003. Port of line receiver.\r\n\r\n#####`gr_enable_udp_listener`\r\n\r\nDefault is 'False' (string). Set this to True to enable the UDP listener.\r\n\r\n#####`gr_udp_receiver_interface`\r\n\r\nDefault is '0.0.0.0' (string). Its clear, isnt it?\r\n\r\n#####`gr_udp_receiver_port`\r\n\r\nDefault is 2003. Self explaining.\r\n\r\n#####`gr_pickle_receiver_interface`\r\n\r\nDefault is '0.0.0.0' (string). Pickle is a special receiver who handle tuples of data.\r\n\r\n#####`gr_pickle_receiver_port`\r\n\r\nDefault is 2004. Self explaining\r\n\r\n#####`gr_use_insecure_unpickler`\r\n\r\nDefault is 'False' (string). Set this to 'True' to revert to the old-fashioned insecure unpickler.\r\n\r\n#####`gr_use_whitelist`\r\n\r\nDefault is 'False' (string). Set this to 'True' to enable whitelists and blacklists.\r\n\r\n#####`gr_cache_query_interface`\r\n\r\nDefault is '0.0.0.0'. Interface to send cache queries to.\r\n\r\n#####`gr_cache_query_port`\r\n\r\nDefault is 7002. Self explaining.\r\n\r\n#####`gr_timezone`\r\n\r\nDefault is 'GMT' (string). Timezone for graphite to be used.\r\n\r\n#####`gr_storage_schemas`\r\n\r\nDefault is\r\n```\r\n[\r\n  {\r\n    name       => 'carbon',\r\n    pattern    => '^carbon\\.',\r\n    retentions => '1m:90d'\r\n  },\r\n  {\r\n    name       => 'default',\r\n    pattern    => '.*',\r\n    retentions => '1s:30m,1m:1d,5m:2y'\r\n  }\r\n]\r\n```\r\nThe storage schemas, which describes how long matching graphs are to be stored in detail.\r\n\r\n#####`gr_storage_aggregation_rules`\r\n\r\nDefault is the Hashmap:\r\n```\r\n{\r\n  '00_min'         => { pattern => '\\.min$',   factor => '0.1', method => 'min' },\r\n  '01_max'         => { pattern => '\\.max$',   factor => '0.1', method => 'max' },\r\n  '02_sum'         => { pattern => '\\.count$', factor => '0.1', method => 'sum' },\r\n  '99_default_avg' => { pattern => '.*',       factor => '0.5', method => 'average'}\r\n}\r\n```\r\nThe storage aggregation rules.\r\n\r\n#####`gr_web_server`\r\n\r\nDefault is 'apache'. The web server to use. Valid values are 'apache', 'nginx', 'wsgionly' or 'none'. 'nginx' is only supported on Debian-like systems. And 'none' means that you will manage the webserver yourself.\r\n\r\n#####`gr_web_servername`\r\n\r\nDefault is `$::fqdn` (string). Virtualhostname of Graphite webgui.\r\n\r\n#####`gr_web_cors_allow_from_all`\r\n\r\nDefault is false (boolean). Include CORS Headers for all hosts (*) in web server config.\r\n\r\n#####`gr_apache_port`\r\n\r\nDefault is 80. The HTTP port apache will use.\r\n\r\n#####`gr_apache_port_https`\r\n\r\nDefault is 443. The HTTPS port apache will use.\r\n\r\n#####`gr_apache_24`\r\n\r\nDefault is false (boolean). If you set this to 'true' and use 'apache' in `gr_web_server`, then the configuration for Apache 2.4 is used, else it will be Apache 2.2 compatible configuration.\r\n\r\n#####`gr_django_1_4_or_less`\r\n\r\nDefault is false (boolean). Django settings style.\r\n\r\n#####`gr_django_db_engine`\r\n\r\nDefault is 'django.db.backends.sqlite3' (string). Can be set to\r\n\r\n- django.db.backends.postgresql  <- Removed in Django 1.4\r\n- django.db.backends.postgresql_psycopg2\r\n- django.db.backends.mysql\r\n- django.db.backends.sqlite3\r\n- django.db.backends.oracle\r\n\r\n#####`gr_django_db_name`\r\n\r\nDefault is '/opt/graphite/storage/graphite.db' (string). Name of database to be used by django.\r\n\r\n#####`gr_django_db_user`\r\n\r\nDefault is '' (string). Name of database user.\r\n\r\n#####`gr_django_db_password`\r\n\r\nDefault is '' (string). Password of database user.\r\n\r\n#####`gr_django_db_host`\r\n\r\nDefault is '' (string). Hostname/IP of database server.\r\n\r\n#####`gr_django_db_port`\r\n\r\nDefault is '' (string). Port of database.\r\n\r\n#####`gr_enable_carbon_aggregator`\r\n\r\nDefault is false (boolean) Enable the carbon aggregator daemon.\r\n\r\n#####`gr_aggregator_line_interface`\r\n\r\nDefault is '0.0.0.0' (string). Address for line interface to listen on.\r\n\r\n#####`gr_aggregator_line_port`\r\n\r\nDefault is 2023. TCP port for line interface to listen on.\r\n\r\n#####`gr_aggregator_pickle_interface`\r\n\r\nDefault is '0.0.0.0' (string). IP address for pickle interface.\r\n\r\n#####`gr_aggregator_pickle_port`\r\n\r\nDefault is 2024. Pickle port.\r\n\r\n#####`gr_aggregator_forward_all`\r\n\r\nDefault is 'True' (string). Forward all metrics to the destination(s) defined in  `gr_aggregator_destinations`.\r\n\r\n#####`gr_aggregator_destinations`\r\n\r\nDefault is [ '127.0.0.1:2004' ] (array). Array of backend carbons.\r\n\r\n#####`gr_aggregator_max_queue_size`\r\n\r\nDefault is 10000. Maximum queue size.\r\n\r\n#####`gr_aggregator_use_flow_control`\r\n\r\nDefault is 'True' (string). Enable flow control Can be True or False.\r\n\r\n#####`gr_aggregator_max_intervals`\r\n\r\nDefault is 5. Maximum number intervals to keep around.\r\n\r\n#####`gr_aggregator_rules`\r\n\r\nDefault is\r\n```\r\n{\r\n  'carbon-class-mem'  => 'carbon.all.<class>.memUsage (60) = sum carbon.<class>.*.memUsage',\r\n  'carbon-all-mem'    => 'carbon.all.memUsage (60) = sum carbon.*.*.memUsage',\r\n}\r\n```\r\nHashmap of carbon aggregation rules.\r\n\r\n#####`gr_memcache_hosts`\r\n\r\nDefault is undef (array). List of memcache hosts to use. eg ['127.0.0.1:11211','10.10.10.1:11211']\r\n\r\n#####`secret_key`\r\n\r\nDefault is 'UNSAFE_DEFAULT' (string). CHANGE IT! Secret used as salt for things like hashes, cookies, sessions etc. Has to be the same on all nodes of a graphite cluster.\r\n\r\n#####`nginx_htpasswd`\r\n\r\nDefault is undef (string). The user and salted SHA-1 (SSHA) password for Nginx authentication. If set, Nginx will be configured to use HTTP Basic authentication with the given user & password. e.g.: 'testuser:$jsfak3.c3Fd0i1k2kel/3sdf3'\r\n\r\n#####`manage_ca_certificate`\r\n\r\nDefault is true (boolean). Used to determine if the module should install ca-certificate on Debian machines during the initial installation.\r\n\r\n#####`gr_use_ldap`\r\n\r\nDefault is false (boolean). Turn ldap authentication on/off.\r\n\r\n#####`gr_ldap_uri`\r\n\r\nDefault is '' (string). Set ldap uri.\r\n\r\n#####`gr_ldap_search_base`\r\n\r\nDefault is '' (string). Set the ldap search base.\r\n\r\n#####`gr_ldap_base_user`\r\n\r\nDefault is '' (string).Set ldap base user.\r\n\r\n#####`gr_ldap_base_pass`\r\n\r\nDefault is '' (string). Set ldap password.\r\n\r\n#####`gr_ldap_user_query`\r\n\r\nDefault is '(username=%s)' (string). Set ldap user query.\r\n\r\n#####`gr_use_remote_user_auth`\r\n\r\nDefault is 'False' (string). Allow use of REMOTE_USER env variable within Django/Graphite.\r\n\r\n#####`gr_remote_user_header_name`\r\n\r\nDefault is undef. Allows the use of a custom HTTP header, instead of the REMOTE_USER env variable (mainly for nginx use) to tell Graphite a user is authenticated. Useful when using an external auth handler with X-Accel-Redirect etc.\r\nExample value - HTTP_X_REMOTE_USER\r\nThe specific use case for this is OpenID right now, but could be expanded to anything.\r\nOne example is something like http://antoineroygobeil.com/blog/2014/2/6/nginx-ruby-auth/\r\ncombined with the option `gr_web_server` = 'wsgionly' and http://forge.puppetlabs.com/jfryman/nginx\r\nwith some custom vhosts.\r\nThe sample external auth app is available from [here](https://github.com/antoinerg/nginx_auth_backend)\r\n\r\n##Requirements\r\n\r\n###Modules needed:\r\n\r\nstdlib by puppetlabs\r\n\r\n###Software versions needed:\r\n\r\nfacter > 1.6.2\r\npuppet > 2.6.2\r\n\r\nOn Redhat distributions you need the EPEL or RPMforge repository, because Graphite needs packages, which are not part of the default repos.\r\n\r\n##Limitations\r\n\r\nThis module is tested on CentOS 6.5 and Debian 7 (Wheezy) and should also run without problems on\r\n\r\n* RHEL/CentOS/Scientific 6+\r\n* Debian 6+\r\n* Ubunutu 10.04 and newer\r\n\r\nMost settings of Graphite can be set by parameters. So their can be special configurations for you. In this case you should edit\r\nthe file `templates/opt/graphite/webapp/graphite/local_settings.py.erb`.\r\n\r\nThe nginx configs are only supported on Debian based systems at the moment.\r\n\r\n##Contributing\r\n\r\nEchocat modules are open projects. So if you want to make this module even better, you can contribute to this module on [Github](https://github.com/echocat/puppet-graphite).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}